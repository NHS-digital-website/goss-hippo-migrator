import org.apache.commons.lang.text.StrSubstitutor
import java.io.*
import javax.jcr.*
import org.apache.commons.lang.*
import org.onehippo.repository.update.BaseNodeUpdateVisitor
import org.onehippo.forge.content.exim.core.DocumentManager
import org.onehippo.forge.content.exim.core.impl.WorkflowDocumentManagerImpl
import org.onehippo.forge.content.exim.core.impl.WorkflowDocumentVariantImportTask

/*
query /jcr:root/content/urlrewriter/rules/digital//element(*, urlrewriter:advancedrule)[(jcr:like(@urlrewriter:ruleto, 'services%'))]
Will only update x number of documents.
Could use the provided throttle.
Management not comfortable with this.
Left the number hard coded.
Update 'if(i < 1){' to, for example 'if(i < 100){'
to set max number of docs to process.
*/

class AddSlashToRewriterToUrl extends BaseNodeUpdateVisitor {

  DocumentManager documentManager
  WorkflowDocumentVariantImportTask importTask

  int i = 0
  void initialize(Session session) {

    this.documentManager = new WorkflowDocumentManagerImpl(session)
    importTask = new WorkflowDocumentVariantImportTask(documentManager)
    importTask.setLogger(log)
    importTask.start()
  }

 boolean doUpdate(Node node) {
   log.debug "Visiting ${node.path}"
   if(i < 1){
     i++
     final String documentPath = node.parent.path

     log.debug "Before ${node.getProperty("urlrewriter:ruleto").getString()}"

     node.setProperty("urlrewriter:ruleto", "/" + node.getProperty("urlrewriter:ruleto").getString())

     log.debug "After ${node.getProperty("urlrewriter:ruleto").getString()}"
     return true
   }

   log.debug "Skipping document"
   return false
 }

 boolean undoUpdate(Node node) {
   throw new UnsupportedOperationException('Updater does not implement undoUpdate method')
 }

 void destroy() {
 }

}